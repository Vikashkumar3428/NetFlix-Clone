{"version":3,"sources":["request.js","axios.js","Row.jsx","Banner.jsx","Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchActionMovies","fetchHorrorMovies","fetchDocumantaries","fetchRomanceMovies","fetchComedyMovies","fetchTopRated","instance","axios","create","baseURL","Row","props","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","fetchURL","request","data","results","fetchData","className","title","map","movie","isLargeRow","onClick","console","log","movieTrailer","name","original_title","then","url","urlParams","URLSearchParams","URL","search","catch","err","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","setMovie","Math","floor","random","length","giveData","style","backgroundImage","backgroundSize","backgroundPosition","original_name","marginRight","overview","Navbar","type","placeholder","aria-label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41cdeecb.chunk.js","sourcesContent":["const API_KEY = \"e04931af86abd5df4cc82be42111d5b4\";\r\n\r\nconst requests = {\r\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}&language=en-us`,\r\n    fetchNetflixOriginals : `/discover/movie?api_key=${API_KEY}&with_networks=213`,\r\n    fetchActionMovies : `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchHorrorMovies : `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchDocumantaries : `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchRomanceMovies : `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchTopRated :`/movie/top_rated?api_key=${API_KEY}&language=en-us`, \r\n\r\n}\r\nexport default requests;","import axios from 'axios'; \r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import axios from './axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Row(props) {\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay : 1,  \r\n        }\r\n    }\r\n    const [movies,setMovies] = useState([]);\r\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n        async function fetchData()\r\n        {\r\n            const request = await axios.get(props.fetchURL);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [props.fetchURL]);\r\n\r\n    const handleClick = (movie) =>{ \r\n        console.log(trailerUrl);\r\n        if(trailerUrl)\r\n        {\r\n            setTrailerUrl(\"\");\r\n        }\r\n        else{\r\n            movieTrailer(movie?.name || movie?.title || movie?.original_title || \"\")\r\n            .then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search); \r\n                // console.log(urlParams.get(\"v\"));\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n            }).catch((err) => { console.log(err);})\r\n        }\r\n    }\r\n\r\n  \r\n    return (\r\n        <div className=\"row\">\r\n            <h1>{props.title}</h1>\r\n            <div className=\"row__posters\">\r\n                {movies.map( (movie) => \r\n                            <img className={`row__poster ${props.isLargeRow && \"row__posterLarge\"}`} \r\n                            key = {movie.id} \r\n                            onClick={() => {handleClick(movie)}}\r\n                            src={`${base_url}${props.isLargeRow ?movie.poster_path: movie.backdrop_path}`} alt={movie.title} />\r\n                    )\r\n                }\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from 'react';\r\nimport requests from './request';\r\nimport axios from './axios';\r\nimport './banner.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nfunction Banner(props) {\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay : 1,  \r\n        }\r\n    }\r\n    const [movie, setMovie]  = useState([]);\r\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n       async function giveData()\r\n       {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length)\r\n            ]);\r\n            return request;\r\n       }\r\n       giveData();\r\n    }, [])\r\n    const handleClick = (movie) =>{ \r\n        if(trailerUrl)\r\n        {\r\n            setTrailerUrl(\"\");\r\n        }\r\n        else{\r\n            movieTrailer(movie?.name || movie?.title || movie?.original_title || \"\")\r\n            .then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search); \r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n            }).catch((err) => { console.log(err);})\r\n        }\r\n    }\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition : \"center center\"\r\n            }}\r\n        >\r\n            <div className=\"banner__contents\">\r\n                <h1>{movie?.name || movie?.title || movie?.original_name}</h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\"><img onClick={() => {handleClick(movie)}} alt=\"image\" src=\"https://img.icons8.com/ios-glyphs/30/000000/play--v2.png\" style={{width:\"20px\",marginRight:\"3px\"}}/>Play</button>\r\n                    <button className=\"banner__button\"><img alt=\"photo\" src=\"https://img.icons8.com/material-outlined/30/000000/checked--v3.png\" style={{width:\"20px\",marginRight:\"3px\"}}/>My List  </button>\r\n                </div>\r\n                <h6 className=\"banner__description\">{movie?.overview}</h6>\r\n                \r\n            </div> {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n            <div className=\"banner__fade\" />\r\n           \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react';\r\nimport './navbar.css';\r\nfunction Navbar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <img src={`https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg`} style={{width:\"18%\",height:\"4vh\"}} />\r\n            <div className=\"navbar__right d-flex\">\r\n            <input className=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn\" type=\"submit\">Search</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport './App.css';\nimport requests from './request';\nimport Row from './Row';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Banner from './Banner';\nimport Navbar from './Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar /> \n      <Banner />\n      <Row title = \"NETFLIX ORIGINALS\" isLargeRow fetchURL ={requests.fetchNetflixOriginals}/>\n      <Row title = \"Trending Now\" fetchURL ={requests.fetchTrending}/>\n      <Row title = \"Top Rated\" fetchURL ={requests.fetchTopRated}/>\n      <Row title = \"Action Movies\" fetchURL ={requests.fetchHorrorMovies}/>\n      <Row title = \"Comedy Movies\" fetchURL ={requests.fetchRomanceMovies}/>\n      <Row title = \"Horror Movies\" fetchURL ={requests.fetchComedyMovies}/>\n      <Row title = \"Romance Movies\" fetchURL ={requests.fetchActionMovies}/>\n      <Row title = \"Documentaries\" fetchURL ={requests.fetchDocumantaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}